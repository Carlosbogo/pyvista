name: Unit Testing and Deployment

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
  push:
    tags:
      - "*"
    branches:
      - main

# python-version: ['3.6', '3.7', '3.8', '3.9']
jobs:

  Linux:
    name: Linux Unit Testing
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
    env:
      SHELLOPTS: 'errexit:pipefail'

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: Python-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements_test.txt') }}
          restore-keys: |
            Python-${{ runner.os }}-${{ matrix.python-version }}

      - name: Install OSMesa Wheel
        run: |
          wget https://github.com/pyvista/pyvista-wheels/blob/main/vtk-osmesa-9.0.1-cp38-cp38-linux_x86_64.whl?raw=true
          pip install vtk-osmesa*.whl

      - name: Build wheel and install pyvista
        run: |
          pip install wheel
          python setup.py bdist_wheel
          pip install dist/pyvista*.whl

      - name: Install Testing Requirements
        run: |
          sudo apt-get install libgl1-mesa-glx xvfb python-tk -y
          pip install -r requirements_test.txt
          pip install pytest-azurepipelines

      - name: Software Report
        run: |
          xvfb-run python -c "import pyvista; print(pyvista.Report())"
          which python
          pip list

      - name: Unit Testing
        run: |
          xvfb-run pytest -v --cov pyvista --cov-report html

      - name: Upload coverage to codecov.io
        if: matrix.python-version == '3.9'
        run: bash <(curl -s https://codecov.io/bash)

      - name: Check package
        run: |
          pip install twine
          python setup.py sdist
          twine check dist/*

      - name: Upload to PyPi
        if: matrix.python-version == '3.9' && startsWith(github.ref, 'refs/tags')
        run: |
          twine upload --skip-existing dist/pyvista*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_REPOSITORY_URL: "https://upload.pypi.org/legacy/"
